// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[Error-1]
	_ = x[EOF-2]
	_ = x[StatementSeparator-3]
	_ = x[KeywordAbort-4]
	_ = x[KeywordAction-5]
	_ = x[KeywordAdd-6]
	_ = x[KeywordAfter-7]
	_ = x[KeywordAll-8]
	_ = x[KeywordAlter-9]
	_ = x[KeywordAnalyze-10]
	_ = x[KeywordAnd-11]
	_ = x[KeywordAs-12]
	_ = x[KeywordAsc-13]
	_ = x[KeywordAttach-14]
	_ = x[KeywordAuto-15]
	_ = x[KeywordBefore-16]
	_ = x[KeywordBegin-17]
	_ = x[KeywordBetween-18]
	_ = x[KeywordBy-19]
	_ = x[KeywordCascade-20]
	_ = x[KeywordCase-21]
	_ = x[KeywordCast-22]
	_ = x[KeywordCheck-23]
	_ = x[KeywordCollate-24]
	_ = x[KeywordColumn-25]
	_ = x[KeywordCommit-26]
	_ = x[KeywordConflict-27]
	_ = x[KeywordConstraint-28]
	_ = x[KeywordCreate-29]
	_ = x[KeywordCross-30]
	_ = x[KeywordCurrent-31]
	_ = x[KeywordCurrentDate-32]
	_ = x[KeywordCurrentTime-33]
	_ = x[KeywordCurrentTimestamp-34]
	_ = x[KeywordDatabase-35]
	_ = x[KeywordDefault-36]
	_ = x[KeywordDeferrable-37]
	_ = x[KeywordDeferred-38]
	_ = x[KeywordDelete-39]
	_ = x[KeywordDesc-40]
	_ = x[KeywordDetach-41]
	_ = x[KeywordDistinct-42]
	_ = x[KeywordDo-43]
	_ = x[KeywordDrop-44]
	_ = x[KeywordEach-45]
	_ = x[KeywordElse-46]
	_ = x[KeywordEnd-47]
	_ = x[KeywordEscape-48]
	_ = x[KeywordExcept-49]
	_ = x[KeywordExclude-50]
	_ = x[KeywordExclusive-51]
	_ = x[KeywordExists-52]
	_ = x[KeywordExplain-53]
	_ = x[KeywordFail-54]
	_ = x[KeywordFilter-55]
	_ = x[KeywordFirst-56]
	_ = x[KeywordFollowing-57]
	_ = x[KeywordFor-58]
	_ = x[KeywordForeign-59]
	_ = x[KeywordFrom-60]
	_ = x[KeywordFull-61]
	_ = x[KeywordGlob-62]
	_ = x[KeywordGroup-63]
	_ = x[KeywordGroups-64]
	_ = x[KeywordHaving-65]
	_ = x[KeywordIf-66]
	_ = x[KeywordIgnore-67]
	_ = x[KeywordImmediate-68]
	_ = x[KeywordIn-69]
	_ = x[KeywordIncrement-70]
	_ = x[KeywordIndex-71]
	_ = x[KeywordIndexed-72]
	_ = x[KeywordInitially-73]
	_ = x[KeywordInner-74]
	_ = x[KeywordInsert-75]
	_ = x[KeywordInstead-76]
	_ = x[KeywordIntersect-77]
	_ = x[KeywordInto-78]
	_ = x[KeywordIs-79]
	_ = x[KeywordJoin-80]
	_ = x[KeywordKey-81]
	_ = x[KeywordLast-82]
	_ = x[KeywordLeft-83]
	_ = x[KeywordLike-84]
	_ = x[KeywordLimit-85]
	_ = x[KeywordMatch-86]
	_ = x[KeywordNatural-87]
	_ = x[KeywordNo-88]
	_ = x[KeywordNot-89]
	_ = x[KeywordNothing-90]
	_ = x[KeywordNull-91]
	_ = x[KeywordNulls-92]
	_ = x[KeywordOf-93]
	_ = x[KeywordOffset-94]
	_ = x[KeywordOn-95]
	_ = x[KeywordOr-96]
	_ = x[KeywordOrder-97]
	_ = x[KeywordOthers-98]
	_ = x[KeywordOuter-99]
	_ = x[KeywordOver-100]
	_ = x[KeywordPartition-101]
	_ = x[KeywordPlan-102]
	_ = x[KeywordPragma-103]
	_ = x[KeywordPreceding-104]
	_ = x[KeywordPrimary-105]
	_ = x[KeywordQuery-106]
	_ = x[KeywordRaise-107]
	_ = x[KeywordRange-108]
	_ = x[KeywordRecursive-109]
	_ = x[KeywordReferences-110]
	_ = x[KeywordRegexp-111]
	_ = x[KeywordReindex-112]
	_ = x[KeywordRelease-113]
	_ = x[KeywordRename-114]
	_ = x[KeywordReplace-115]
	_ = x[KeywordRestrict-116]
	_ = x[KeywordRight-117]
	_ = x[KeywordRollback-118]
	_ = x[KeywordRow-119]
	_ = x[KeywordRows-120]
	_ = x[KeywordSavepoint-121]
	_ = x[KeywordSelect-122]
	_ = x[KeywordSet-123]
	_ = x[KeywordTable-124]
	_ = x[KeywordTemp-125]
	_ = x[KeywordTemporary-126]
	_ = x[KeywordThen-127]
	_ = x[KeywordTies-128]
	_ = x[KeywordTo-129]
	_ = x[KeywordTransaction-130]
	_ = x[KeywordTrigger-131]
	_ = x[KeywordUnbounded-132]
	_ = x[KeywordUnion-133]
	_ = x[KeywordUnique-134]
	_ = x[KeywordUpdate-135]
	_ = x[KeywordUsing-136]
	_ = x[KeywordVacuum-137]
	_ = x[KeywordValues-138]
	_ = x[KeywordView-139]
	_ = x[KeywordVirtual-140]
	_ = x[KeywordWhen-141]
	_ = x[KeywordWhere-142]
	_ = x[KeywordWindow-143]
	_ = x[KeywordWith-144]
	_ = x[KeywordWithout-145]
	_ = x[Literal-146]
	_ = x[UnaryOperator-147]
	_ = x[BinaryOperator-148]
}

const _Type_name = "UnknownErrorEOFStatementSeparatorKeywordAbortKeywordActionKeywordAddKeywordAfterKeywordAllKeywordAlterKeywordAnalyzeKeywordAndKeywordAsKeywordAscKeywordAttachKeywordAutoKeywordBeforeKeywordBeginKeywordBetweenKeywordByKeywordCascadeKeywordCaseKeywordCastKeywordCheckKeywordCollateKeywordColumnKeywordCommitKeywordConflictKeywordConstraintKeywordCreateKeywordCrossKeywordCurrentKeywordCurrentDateKeywordCurrentTimeKeywordCurrentTimestampKeywordDatabaseKeywordDefaultKeywordDeferrableKeywordDeferredKeywordDeleteKeywordDescKeywordDetachKeywordDistinctKeywordDoKeywordDropKeywordEachKeywordElseKeywordEndKeywordEscapeKeywordExceptKeywordExcludeKeywordExclusiveKeywordExistsKeywordExplainKeywordFailKeywordFilterKeywordFirstKeywordFollowingKeywordForKeywordForeignKeywordFromKeywordFullKeywordGlobKeywordGroupKeywordGroupsKeywordHavingKeywordIfKeywordIgnoreKeywordImmediateKeywordInKeywordIncrementKeywordIndexKeywordIndexedKeywordInitiallyKeywordInnerKeywordInsertKeywordInsteadKeywordIntersectKeywordIntoKeywordIsKeywordJoinKeywordKeyKeywordLastKeywordLeftKeywordLikeKeywordLimitKeywordMatchKeywordNaturalKeywordNoKeywordNotKeywordNothingKeywordNullKeywordNullsKeywordOfKeywordOffsetKeywordOnKeywordOrKeywordOrderKeywordOthersKeywordOuterKeywordOverKeywordPartitionKeywordPlanKeywordPragmaKeywordPrecedingKeywordPrimaryKeywordQueryKeywordRaiseKeywordRangeKeywordRecursiveKeywordReferencesKeywordRegexpKeywordReindexKeywordReleaseKeywordRenameKeywordReplaceKeywordRestrictKeywordRightKeywordRollbackKeywordRowKeywordRowsKeywordSavepointKeywordSelectKeywordSetKeywordTableKeywordTempKeywordTemporaryKeywordThenKeywordTiesKeywordToKeywordTransactionKeywordTriggerKeywordUnboundedKeywordUnionKeywordUniqueKeywordUpdateKeywordUsingKeywordVacuumKeywordValuesKeywordViewKeywordVirtualKeywordWhenKeywordWhereKeywordWindowKeywordWithKeywordWithoutLiteralUnaryOperatorBinaryOperator"

var _Type_index = [...]uint16{0, 7, 12, 15, 33, 45, 58, 68, 80, 90, 102, 116, 126, 135, 145, 158, 169, 182, 194, 208, 217, 231, 242, 253, 265, 279, 292, 305, 320, 337, 350, 362, 376, 394, 412, 435, 450, 464, 481, 496, 509, 520, 533, 548, 557, 568, 579, 590, 600, 613, 626, 640, 656, 669, 683, 694, 707, 719, 735, 745, 759, 770, 781, 792, 804, 817, 830, 839, 852, 868, 877, 893, 905, 919, 935, 947, 960, 974, 990, 1001, 1010, 1021, 1031, 1042, 1053, 1064, 1076, 1088, 1102, 1111, 1121, 1135, 1146, 1158, 1167, 1180, 1189, 1198, 1210, 1223, 1235, 1246, 1262, 1273, 1286, 1302, 1316, 1328, 1340, 1352, 1368, 1385, 1398, 1412, 1426, 1439, 1453, 1468, 1480, 1495, 1505, 1516, 1532, 1545, 1555, 1567, 1578, 1594, 1605, 1616, 1625, 1643, 1657, 1673, 1685, 1698, 1711, 1723, 1736, 1749, 1760, 1774, 1785, 1797, 1810, 1821, 1835, 1842, 1855, 1869}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
